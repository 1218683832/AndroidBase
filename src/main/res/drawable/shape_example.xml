<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle"
    android:useLevel="false" >

    <solid android:color="#ccffaa" >
    </solid>

</shape><!--
自定义样式之shape的使用
一、	基本属性
corners、gradient、padding、size、solid、stroke。
下面就具体讲讲shape标签里所具有的几个子标签及所具有的属性。
1、	corners
<corners    //定义圆角  
    android:radius="dimension"      //全部的圆角半径  
    android:topLeftRadius="dimension"   //左上角的圆角半径  
    android:topRightRadius="dimension"  //右上角的圆角半径  
    android:bottomLeftRadius="dimension"    //左下角的圆角半径  
    android:bottomRightRadius="dimension" />    //右下角的圆角半径  
Corners标签是用来字义圆角的，其中radius与其它四个并不能共同使用，同时设置五个属性，则Radius属性无效。
android:radius：定义四个角的的圆角半径。
其它四个是逐个字义每个角的圆角半径。
2、	solid
solid用以指定内部填充。
只有一个属性：<solid  android:color="color" />
3、	gradient
gradient用以定义渐变色，可以定义两色渐变和三色渐变，及渐变样式，它的属性有下面几个：
<gradient 
    android:type=["linear" | "radial" | "sweep"]    //共有3中渐变类型，线性渐变（默认）/放射渐变/扫描式渐变  
    android:angle="integer"     //渐变角度，必须为45的倍数，0为从左到右，90为从上到下  
    android:centerX="float"     //渐变中心X的相当位置，范围为0～1  
    android:centerY="float"     //渐变中心Y的相当位置，范围为0～1  
    android:startColor="color"   //渐变开始点的颜色  
    android:centerColor="color"  //渐变中间点的颜色，在开始与结束点之间  
    android:endColor="color"    //渐变结束点的颜色  
    android:gradientRadius="float"  //渐变的半径，只有当渐变类型为radial时才能使用  
android:useLevel=["true" | "false"] />  //使用LevelListDrawable时就要设置为true。设为false时才有渐变效果。
1)	android:type=["linear" | "radial" | "sweep"]
首先有三种渐变类型，分别是：linear（线性渐变）、radial（放射性渐变）、sweep（扫描式渐变）。
下面列出这三个渐变方式的shape代码，供大家参考：
	线性渐变
<gradient 
        android:type="linear"
        android:startColor="#ff0000"
        android:centerColor="#00ff00"
        android:endColor="#0000ff"/>
	放射性渐变
<gradient 
        android:type="radial"
        android:startColor="#ff0000"
        android:centerColor="#00ff00"
        android:endColor="#0000ff"
        android:gradientRadius="100"/>
	扫描式渐变
<gradient 
        android:type="sweep"
        android:startColor="#ff0000"
        android:centerColor="#00ff00"
        android:endColor="#0000ff"/>
可见放射性渐变，只是比其它两个多了个android:gradientRadius属性。
 
2)	android:angle属性（仅对线性渐变有效）
android:angle="integer"     //渐变角度，必须为45的倍数，0为从左到右，90为从上到下。
<gradient 
        android:type="linear"
        android:startColor="#ff0000"
        android:centerColor="#00ff00"
        android:endColor="#0000ff"
        android:angle="45"/>
 
3)	android:centerX与android:centerY
centerX、centerY两个属性用于设置渐变的中心点位置，仅当渐变类型为放射渐变时有效，类型为分数或小数，不接受Dimension。默认值是0.5，有效值是0.0~1.0，超出该范围后会看不出渐变效果。centerX、centerY的取值其实是宽和高的百分比；不难理解，下面看代码：
<gradient 
        android:type="sweep"
        android:startColor="#ff0000"
        android:centerColor="#00ff00"
        android:endColor="#0000ff"
        android:centerX="0.2"
        android:centerY="0.8"/>
取宽度的20%和高度的80%的位置，作为新的渐变原点。
 
4)	android:useLevel
useLevel属性通常不使用。该属性用于指定是否将该shape当成一个LevelListDrawable来使用，默认值为false。
4、	stroke
这是描边属性，可以定义描边的宽度，颜色，虚实线等。
<stroke       
    android:width="dimension"   //描边的宽度  
    android:color="color"   //描边的颜色  
    // 以下两个属性设置虚线  
    android:dashWidth="dimension"   //虚线的宽度，值为0时是实线  
android:dashGap="dimension" />      //虚线的间隔
 
5、	size和padding
这两个基本上不怎么用，因为他们所具有的功能，控件本身也能实现。
size:是用来定义图形的大小的。
<size  
   android:width="dimension"  
android:height="dimension" />

padding：用来定义内部边距
<padding   
    android:left="dimension"  
    android:top="dimension"  
    android:right="dimension"  
    android:bottom="dimension" />
二、	Shape的属性（rectangle、oval、line、ring）
rectangle (矩形)
不指定shape属性时，默认就是矩形的。
oval（椭圆）
line(线形)
ring（环形）
android:innerRadius         尺寸，内环的半径。  
android:thickness           尺寸，环的厚度  
android:innerRadiusRatio    浮点型，以环的宽度比率来表示内环的半径，  
      例如，如果android:innerRadiusRatio，表示内环半径等于环的宽度除以5，这个值是可以被覆盖的，默认为9.  
android:thicknessRatio      浮点型，以环的宽度比率来表示环的厚度，例如，如果android:thicknessRatio="2"，  
      那么环的厚度就等于环的宽度除以2。这个值是可以被android:thickness覆盖的，默认值是3.  
android:useLevel            boolean值，如果当做是LevelListDrawable使用时值为true，否则为false.
这么几个属性无外乎就是定义环形的内环尺寸和环的宽度。
shape定义：（这里一定要要加上useLevel属性并定义为false，不然没有效果）
<shape xmlns:android="http://schemas.android.com/apk/res/android" 
    android:shape="ring" 
    android:innerRadius="20dp" 
    android:thickness="50dp"  
    android:useLevel="false">
    <solid android:color="#ff00ff"/>
</shape>

-->
